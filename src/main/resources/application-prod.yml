server:
  port: ${SERVER_PORT}
  servlet:
    session:
      timeout: 15s
      cookie:
        same-site: Strict
        secure: false

spring:
  application:
    name: authorization-server
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOSTNAME}:${POSTGRES_PORT}/postgres?currentSchema=${POSTGRES_SCHEMA}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      username: ${POSTGRES_USERNAME}
      password: ${POSTGRES_PASSWORD}
      connection-timeout: 10000
      minimum-idle: 5
      maximum-pool-size: 10
      idle-timeout: 60000
      max-lifetime: 180000
      auto-commit: true
  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_schema: ${POSTGRES_SCHEMA}
        format_sql: false
        jdbc:
          batch_size: 15
          fetch_size: 90
        max_fetch_depth: 3
        generate_statistics: false
        temp:
          use_jdbc_metadata_defaults: true
  security:
    oauth2:
      authorizationserver:
        issuer-url: http://${SERVER_HOSTNAME}:${SERVER_PORT}

eureka:
  instance:
    instanceId: ${spring.application.name}:${random.value}
  client:
    serviceUrl:
      defaultZone: ${DISCOVERY_SERVERS}
    healthcheck:
      enabled: true

logging:
  config: classpath:logback-prod.xml

springdoc:
  enabled: false

management:
  endpoints:
    web:
      exposure:
        include: info, health
  endpoint:
    info:
      app:
        name: ${spring.application.name}
        version: 1.0
    health:
      show-details: always